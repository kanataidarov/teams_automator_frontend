syntax = "proto3";

package interview_automator;
option go_package = "github.com/kanataidarov/interview_automator/pkg/interview_automator";

service OpenAiApi {
  rpc Transcribe(TranscribeRequest) returns (TranscribeResponse) {}
  rpc ChatBot(ChatBotRequest) returns (ChatBotResponse) {}
}

message TranscribeRequest {
  FileHeader header = 1;
  bytes data = 2;
  bool is_debug = 3;
}

message FileHeader {
  string name = 1;
  optional int64 size = 2;
}

message TranscribeResponse {
  string transcription = 1;
}

enum Stage {
  DEFAULT_STAGE = 0;
  THEORY = 1;
  LIVECODING = 2;
  SOFTSKILLS = 3;
}

enum QIntent {
  DEFAULT_INTENT = 0;
  CLARIFY = 1;
  SOLVE = 2;
  CORRECT = 3;
}

message ChatBotRequest {
  string topic = 1;
  string model = 2;
  repeated Question questions = 3;
  bool is_debug = 4;
  Stage stage = 5;
  QIntent intent = 6;
  string lang = 7;
}

message Question {
  enum AnswerType {
    DEFAULT_ANSTYPE = 0;
    RAW = 1;
    JSON_ONLY = 2;
    SNIPPET = 3;
  }

  int32 qid = 1;
  string content = 2;
  AnswerType ans_type = 3;
}

message ChatBotResponse {
  repeated Answer answers = 1;
  Stage stage = 2;
  string lang = 3;
}

message Answer {
  int32 qid = 1;
  string content = 2;
  string extracted = 3;
}
